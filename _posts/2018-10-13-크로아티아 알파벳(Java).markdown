---
layout: post
title:  "[2941]크로아티아 알파벳(JAVA)"
date:   2018-10-13 23:40:00 +0900
categories: 알고리즘
---
#### ＃ 문제
[백준]
#### [[2941]크로아티아 알파벳](https://www.acmicpc.net/problem/2941)  

<details><summary >문제 보기</summary>
<div style="font-size:0.7em;">

**#문제**  
<div style=" line-height:30px;" id="problem_description">
				<p>예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다. 따라서, 다음과 같이 크로아티아 알파벳을 다음과 같이 변경해서 입력했다.</p>

<table class="table table-bordered" style="width:40%">
	<thead>
		<tr>
			<th style="width:20%">크로아티아 알파벳</th>
			<th style="width:20%">변경</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>č</td>
			<td>c=</td>
		</tr>
		<tr>
			<td>ć</td>
			<td>c-</td>
		</tr>
		<tr>
			<td>dž</td>
			<td>dz=</td>
		</tr>
		<tr>
			<td>ñ</td>
			<td>d-</td>
		</tr>
		<tr>
			<td>lj</td>
			<td>lj</td>
		</tr>
		<tr>
			<td>nj</td>
			<td>nj</td>
		</tr>
		<tr>
			<td>š</td>
			<td>s=</td>
		</tr>
		<tr>
			<td>ž</td>
			<td>z=</td>
		</tr>
	</tbody>
</table>

<p>예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.</p>

<p>dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다.&nbsp;위 목록에 없는 알파벳은 한 글자씩 센다.</p>
</div>


**#입력**  
첫째 줄에 최대 100글자의 단어가 주어진다. 알파벳 소문자와 '-', '='로만 이루어져 있다.
문제 설명에 나와있는 크로아티아 알파벳만 주어진다.  


**#출력**  
입력으로 주어진 단어가 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.  


</div>
</details>  

<br>  

#### # 풀이 ####  

| 메모리 | 시간 |
|-------|------|
| 11316KB | 100 ms |


문제 풀기에 앞서 tmi지만 나는 크로아티아 여행을 갔었다! 그래서 왠지 더 친숙한 문제다! 풀 때도 더 재밌게 풀었던 것 같당 헤헤. 역시 학연지연혈연.... 크로아티아 또 가고시퍼.. 아이스크림 먹구싶당.  
문제를 보니까 크로아티아 알파벳이 많기 때문에 크로아티아 알파벳인 경우를 찾아 더하는 것 보다 전체 단어에서 크로아티아 단어를 골라내어 빼는 방법이 더 나을것 같았다. -가 있으면 무조건 크로아티아 단어이기 때문에 전체 단어 개수에서 1을 빼 주었다. 'd-'는 실제로는 2글자지만 크로아티아 알파벳 ñ 으로 변환될 수 있기 때문이다! 그리고 lj와 nj인 경우에도 변환될 수 있기 때문에 한 글자씩 뺐다. 으으음 문자에 =이 들어가는 경우도 모두 크로아티아 단어로 변환될 수 있지만 z=와 dz=인 경우를 잘 봐야하기 때문에 if문 안에 또 if문을 썼다..  
내가 알파벳인지 아닌지 어떻게 찾았냐면 스트링을 무작정 더하는 것이었다. lj의 경우에는 s[i-1]+s[i], dz=의 경우에는 s[i-2]+s[i-1]+s[i] 이런식으로.. 무식했던 것 같지만 무식한 거 맞다! 그 때는 생각이 안났다. 생각해보니 그냥 스트링 배열로 쪼개지 말고 substring을 이용하거나 그런 방법을 사용할 것을 그랬다! 굳이 왜 쪼갰던 거죠.. 무튼 이제는 1정도 더 효율적으로 짤 수 있을 거야. 문제 풀이만 하려고 보면 자꾸 비효율적으로 짠 게 느껴져서 괴롭다. 힝!  
 <br>  

- **코드**


```java
import java.util.Scanner;

public class Main {
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		String[] s = sc.next().trim().split("");
		int output = s.length;
		for (int i = 0; i < s.length; i++) {
			if (s[i].equals("-")) {
				--output;
			} else if (i < s.length-1 && ((s[i] + s[i+1]).equals("lj") || (s[i] + s[i+1]).equals("nj"))){
				--output;
			}
			else if (s[i].equals("=")) {
				if (i >= 2 && (s[i - 2] + s[i - 1] + s[i]).equals("dz="))
					output-=2;
				else--output;
			}
		}
		System.out.println(output);
	}

}

```
